####################################################
# THIS IS THE NGINX CONFIG FOR ONE OF MY WEBSITES  #
#   IT GETS AN [A+] RATING ON THE SSL LABS TEST    #
#   ALSO, IT FORCES HSTS AND COVERS MOST CIPHERS   #
# -------====== BY NULL-DEV (Shadow) ======------- #
####################################################
#                                                  #
# NOTE: FQDN stands for "Full Qualified Domain     #
#        Name" and must be replaced with your own  # 
#        domain                                    #
#                                                  #
# This is the file in                              #
#   > /etc/nginx/sites-available/domain.com        #
# Symlinked to                                     #              
#   > /etc/nginx/sites-enabled/domain.com          #
#                                                  #
# ALSO: All uppercase comments are additional      #
#       infos by me.                               #
#                                                  #
####################################################

server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name FQDN.com;
        
        # THIS WILL REDIRECT HTTP TO HTTPS
        return 301 https://FQDN.com$request_uri;
        location ~ /.well-known {
               allow all;
        }
}

server {
        #listen 80 default_server;
        listen 443 ssl default_server;
        # DISALLOW USING THE SITE AS iFRAME (CLICKJACKING)
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        # USE HSTS [A+]
        add_header Strict-Transport-Security 'max-age=31536000; preload';
        
        # REMOVE THE COMMENT (#) IF YOU WANT TO INCLUDE SUBDOMAINS
        #includeSubDomains; preload';
        #listen [::]:80 default_server ipv6only=on;

        root /var/www/FQDN.com/public_html;
        index index.html index.htm index.php;

        server_name FQDN.com;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/FQDN.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/FQDN.com/privkey.pem;
        
        # ANTI POODLE
        ssl_protocols TLSv1.2;
        
        # OCSP STAPLING
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.4.4 8.8.8.8 valid=300s;
        resolver_timeout 10s;
        
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 24h;
        
        # THIS SHOULD COVER MOST BROWSER WITHOUT GETTING A BAD RATING
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
        ssl_prefer_server_ciphers on;
        
        # WE WANT TO GENERATE A 4096-BIT DHPARAM KEY IN THE DIRECTORY '/etc/nginx/ssl' WHICH WE HAVE TO CREATE WITH 
        # $ mkdir /etc/nginx/ssl && cd /etc/nginx/ssl
        # BY USING THE COMMAND
        # $ openssl dhparam -out dhparam.pem 4096
        
        # ------====== WARNING ======------
        # THIS IS GOING TO TAKE *VERY* LONG
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # 2048-BIT CERTIFICATE
        location /.well-known/acme-challenge {
                root /var/www/letsencrypt;
        }

        location ~ /(config\.php|common\.php|cache|files|images/avatars/upload|includes|store) {
                deny all;
                return 403;
        }
        
        # THIS IS FOR THE WOLTLAB BURNING BOARD CMS SOFTWARE 
        location /wbb/ {
                index index.php;
                try_files $uri $uri/ /wbb/index.php?$uri&$args;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }
        
        location ~* \.(gif|jpe?g|png|css)$ {
                expires   30d;
        }

        # NOTE: THIS IS THE LOCATION FOR PHP MY ADMIN SITE WHICH INCLUDES AN NGINX AUTH
        location /PHPMYADMINLOCATION {
                auth_basic "Admin Login";
                auth_basic_user_file /etc/nginx/pma_pass;
        }
    
        # THIS NEEDS TO BE AN OWN SERVER (FOR GOGS)
        # EDIT: UNUSED, HAS ITS OWN SUBDOMAIN NOW
        #location /git {
        #       proxy_pass http://localhost:3000/;
        #}

        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php5-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }
        
        # LETSENCRYPT
        location ~ /.well-known {
                allow all;
        }

        # THIS USES THE CUSTOM 404 PAGE LOCATED AT /var/www/error/404.html
        error_page 404 /404.html;
                location = /404.html {
                root /var/www/error/;
                internal;
        }
        
        location / {
                index index.php;
                try_files $uri $uri/ /index.php?$uri&$args;
                #rewrite ^(.*)$ https://$http_host$request_uri redirect;
                # include /etc/nginx/naxsi.rules
        }
}
